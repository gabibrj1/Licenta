# Generated by Django 5.1.1 on 2025-05-24 12:51

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CaptchaAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('session_key', models.CharField(blank=True, max_length=40, null=True)),
                ('captcha_type', models.CharField(default='recaptcha', max_length=50)),
                ('is_success', models.BooleanField()),
                ('attempt_count', models.IntegerField(default=1)),
                ('context', models.CharField(blank=True, max_length=100)),
                ('user_agent', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Încercare CAPTCHA',
                'verbose_name_plural': 'Încercări CAPTCHA',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['ip_address', '-timestamp'], name='security_ca_ip_addr_bea85f_idx'), models.Index(fields=['user', '-timestamp'], name='security_ca_user_id_4c2b4f_idx'), models.Index(fields=['is_success', '-timestamp'], name='security_ca_is_succ_3df9d0_idx')],
            },
        ),
        migrations.CreateModel(
            name='DeviceFingerprint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(blank=True, max_length=40, null=True)),
                ('fingerprint_hash', models.CharField(db_index=True, max_length=64)),
                ('screen_resolution', models.CharField(blank=True, max_length=20)),
                ('color_depth', models.IntegerField(blank=True, null=True)),
                ('timezone_offset', models.IntegerField(blank=True, null=True)),
                ('language', models.CharField(blank=True, max_length=10)),
                ('platform', models.CharField(blank=True, max_length=50)),
                ('user_agent', models.TextField(blank=True)),
                ('has_cookies', models.BooleanField(default=True)),
                ('has_local_storage', models.BooleanField(default=True)),
                ('has_session_storage', models.BooleanField(default=True)),
                ('canvas_fingerprint', models.CharField(blank=True, max_length=64)),
                ('is_trusted', models.BooleanField(default=False)),
                ('is_suspicious', models.BooleanField(default=False)),
                ('first_seen', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_seen', models.DateTimeField(default=django.utils.timezone.now)),
                ('usage_count', models.IntegerField(default=1)),
                ('typical_ips', models.JSONField(blank=True, default=list)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Device Fingerprint',
                'verbose_name_plural': 'Device Fingerprints',
                'ordering': ['-last_seen'],
                'indexes': [models.Index(fields=['fingerprint_hash'], name='security_de_fingerp_d2a57a_idx'), models.Index(fields=['user', '-last_seen'], name='security_de_user_id_eefc94_idx'), models.Index(fields=['is_trusted'], name='security_de_is_trus_2c5694_idx'), models.Index(fields=['is_suspicious'], name='security_de_is_susp_c8666f_idx')],
            },
        ),
        migrations.CreateModel(
            name='SecurityAlert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('alert_type', models.CharField(choices=[('multiple_failed_logins', 'Încercări multiple de autentificare'), ('captcha_multiple_failures', 'Eșecuri multiple CAPTCHA'), ('multiple_devices', 'Dispozitive multiple detectate'), ('suspicious_device', 'Dispozitiv suspect'), ('suspicious_location', 'Locație suspectă'), ('unusual_activity', 'Activitate neobișnuită'), ('potential_fraud', 'Potențială fraudă'), ('security_breach', 'Breach de securitate'), ('facial_recognition_anomaly', 'Anomalie recunoaștere facială'), ('voting_anomaly', 'Anomalie la vot'), ('id_verification_issues', 'Probleme verificare identitate')], max_length=50)),
                ('severity', models.CharField(choices=[('info', 'Informativ'), ('warning', 'Avertisment'), ('error', 'Eroare'), ('critical', 'Critic')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('details', models.JSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('is_acknowledged', models.BooleanField(default=False)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('auto_action_taken', models.JSONField(blank=True, default=dict)),
                ('requires_user_action', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acknowledged_alerts', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Alertă Securitate',
                'verbose_name_plural': 'Alerte Securitate',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', '-created_at'], name='security_se_user_id_6076db_idx'), models.Index(fields=['alert_type', '-created_at'], name='security_se_alert_t_e22eb6_idx'), models.Index(fields=['severity', '-created_at'], name='security_se_severit_9ca429_idx'), models.Index(fields=['is_active', '-created_at'], name='security_se_is_acti_63dfbd_idx')],
            },
        ),
        migrations.CreateModel(
            name='SecurityEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('login_success', 'Autentificare reușită'), ('login_failed', 'Autentificare eșuată'), ('logout', 'Deconectare'), ('password_change', 'Schimbare parolă'), ('password_reset_request', 'Solicitare resetare parolă'), ('password_reset_success', 'Resetare parolă reușită'), ('2fa_enabled', 'Activare autentificare 2FA'), ('2fa_disabled', 'Dezactivare autentificare 2FA'), ('2fa_failed', 'Autentificare 2FA eșuată'), ('2fa_success', 'Autentificare 2FA reușită'), ('captcha_success', 'Verificare CAPTCHA reușită'), ('captcha_failed', 'Verificare CAPTCHA eșuată'), ('captcha_multiple_attempts', 'Încercări multiple CAPTCHA'), ('vote_cast', 'Vot emis'), ('vote_attempted', 'Încercare vot'), ('facial_recognition_failed', 'Recunoaștere facială eșuată'), ('facial_recognition_success', 'Recunoaștere facială reușită'), ('anti_spoofing_triggered', 'Detectie anti-spoofing'), ('multiple_faces_detected', 'Detectie mai multe fețe'), ('id_card_scan_success', 'Scanare buletin reușită'), ('id_card_scan_failed', 'Scanare buletin eșuată'), ('device_fingerprint_match', 'Dispozitiv cunoscut detectat'), ('new_device_detected', 'Dispozitiv nou detectat'), ('suspicious_device_detected', 'Dispozitiv suspect detectat'), ('device_marked_trusted', 'Dispozitiv marcat ca de încredere'), ('device_trust_changed', 'Stare încredere dispozitiv schimbată'), ('suspicious_activity', 'Activitate suspectă'), ('data_export', 'Export date'), ('profile_update', 'Actualizare profil'), ('account_locked', 'Cont blocat'), ('account_unlocked', 'Cont deblocat'), ('session_expired', 'Sesiune expirată'), ('force_logout', 'Deconectare forțată'), ('gdpr_consent', 'Consimțământ GDPR'), ('email_verification', 'Verificare email')], max_length=50)),
                ('risk_level', models.CharField(choices=[('low', 'Scăzut'), ('medium', 'Mediu'), ('high', 'Ridicat'), ('critical', 'Critic')], default='low', max_length=20)),
                ('description', models.TextField(verbose_name='Descriere eveniment')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('device_info', models.JSONField(blank=True, default=dict)),
                ('location_info', models.JSONField(blank=True, default=dict)),
                ('additional_data', models.JSONField(blank=True, default=dict)),
                ('session_key', models.CharField(blank=True, max_length=40, null=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_events', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Eveniment Securitate',
                'verbose_name_plural': 'Evenimente Securitate',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', '-timestamp'], name='security_se_user_id_76ab6c_idx'), models.Index(fields=['event_type', '-timestamp'], name='security_se_event_t_8d2050_idx'), models.Index(fields=['risk_level', '-timestamp'], name='security_se_risk_le_66d35f_idx'), models.Index(fields=['ip_address', '-timestamp'], name='security_se_ip_addr_d55299_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=40, unique=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('device_info', models.JSONField(default=dict)),
                ('location_info', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_activity', models.DateTimeField(default=django.utils.timezone.now)),
                ('expires_at', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('is_current', models.BooleanField(default=False)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('end_reason', models.CharField(blank=True, max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sesiune Utilizator',
                'verbose_name_plural': 'Sesiuni Utilizatori',
                'ordering': ['-last_activity'],
                'indexes': [models.Index(fields=['user', '-last_activity'], name='security_us_user_id_90fc88_idx'), models.Index(fields=['session_key'], name='security_us_session_cd98d8_idx'), models.Index(fields=['is_active', '-last_activity'], name='security_us_is_acti_e219c9_idx')],
            },
        ),
    ]
