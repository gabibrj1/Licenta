# Generated by Django 5.1.1 on 2025-04-07 12:38

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('vote', '0009_parliamentaryparty_parliamentaryvote'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='VoteSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('political', 'Politic'), ('organizational', 'Organizațional'), ('community', 'Comunitar'), ('survey', 'Sondaj'), ('decision', 'Decizie'), ('other', 'Altele')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('rules', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('pending', 'În așteptare'), ('active', 'Activ'), ('completed', 'Încheiat'), ('rejected', 'Respins')], default='pending', max_length=20)),
                ('ai_verified', models.BooleanField(default=False)),
                ('ai_verification_result', models.JSONField(blank=True, null=True)),
                ('admin_verified', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vote_systems', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sistem de vot',
                'verbose_name_plural': 'Sisteme de vot',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VoteOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('order', models.IntegerField(default=0)),
                ('vote_system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='vote.votesystem')),
            ],
            options={
                'verbose_name': 'Opțiune de vot',
                'verbose_name_plural': 'Opțiuni de vot',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='VoteCast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anonymous_id', models.CharField(blank=True, max_length=100, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('vote_datetime', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='vote.voteoption')),
                ('vote_system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='vote.votesystem')),
            ],
            options={
                'verbose_name': 'Vot',
                'verbose_name_plural': 'Voturi',
                'constraints': [models.UniqueConstraint(condition=models.Q(('user__isnull', False)), fields=('vote_system', 'user'), name='unique_user_vote_per_system')],
            },
        ),
    ]
